
This file lists modules PyInstaller was not able to find. This does not
necessarily mean this module is required for running your program. Python and
Python 3rd-party packages include a lot of conditional or optional modules. For
example the module 'ntpath' only exists on Windows, whereas the module
'posixpath' only exists on Posix systems.

Types if import:
* top-level: imported at the top-level - look at these first
* conditional: imported within an if-statement
* delayed: imported within a function
* optional: imported within a try-except-statement

IMPORTANT: Do NOT post this list to the issue-tracker. Use it as a basis for
            tracking down the missing module yourself. Thanks!

missing module named pyimod02_importers - imported by E:\WGP\Solution\PythonTortoies\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgutil.py (delayed), E:\WGP\Solution\PythonTortoies\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py (delayed)
missing module named pwd - imported by posixpath (delayed, conditional, optional), shutil (delayed, optional), tarfile (optional), pathlib._local (optional), subprocess (delayed, conditional, optional), getpass (delayed, optional), http.server (delayed, optional), netrc (delayed, optional), psutil (optional), setuptools._distutils.util (delayed, conditional, optional), setuptools._vendor.backports.tarfile (optional), setuptools._distutils.archive_util (optional), gevent.subprocess (optional)
missing module named grp - imported by shutil (delayed, optional), tarfile (optional), pathlib._local (optional), subprocess (delayed, conditional, optional), setuptools._vendor.backports.tarfile (optional), setuptools._distutils.archive_util (optional), gevent.subprocess (optional)
missing module named _posixsubprocess - imported by subprocess (conditional), multiprocessing.util (delayed)
missing module named fcntl - imported by subprocess (optional), pty (delayed, optional), gevent.fileobject (optional), gevent.os (optional), gevent.subprocess (conditional), _pyrepl.unix_console (top-level)
missing module named posix - imported by posixpath (optional), shutil (conditional), importlib._bootstrap_external (conditional), os (conditional, optional), _pyrepl.unix_console (delayed, optional)
missing module named resource - imported by posix (top-level), test.support (delayed, conditional, optional)
missing module named _manylinux - imported by packaging._manylinux (delayed, optional), setuptools._vendor.packaging._manylinux (delayed, optional), setuptools._vendor.wheel.vendored.packaging._manylinux (delayed, optional)
missing module named _frozen_importlib_external - imported by importlib._bootstrap (delayed), importlib (optional), importlib.abc (optional), zipimport (top-level)
missing module named annotationlib - imported by typing_extensions (conditional)
missing module named '_typeshed.importlib' - imported by pkg_resources (conditional)
missing module named _typeshed - imported by pydantic_core._pydantic_core (top-level), anyio.abc._eventloop (conditional), anyio._core._sockets (conditional), anyio._core._fileio (conditional), anyio._core._tempfile (conditional), httpx._transports.wsgi (conditional), pydantic._internal._dataclasses (conditional), setuptools._distutils.dist (conditional), setuptools.glob (conditional), setuptools.compat.py311 (conditional), pkg_resources (conditional), anyio._backends._asyncio (conditional), anyio._core._asyncio_selector_thread (conditional), anyio._backends._trio (conditional)
missing module named jnius - imported by setuptools._vendor.platformdirs.android (delayed, conditional, optional)
missing module named android - imported by setuptools._vendor.platformdirs.android (delayed, conditional, optional)
missing module named _posixshmem - imported by multiprocessing.resource_tracker (conditional), multiprocessing.shared_memory (conditional)
missing module named multiprocessing.set_start_method - imported by multiprocessing (top-level), multiprocessing.spawn (top-level)
missing module named multiprocessing.get_start_method - imported by multiprocessing (top-level), multiprocessing.spawn (top-level)
missing module named multiprocessing.get_context - imported by multiprocessing (top-level), multiprocessing.pool (top-level), multiprocessing.managers (top-level), multiprocessing.sharedctypes (top-level), watchfiles.run (top-level)
missing module named multiprocessing.TimeoutError - imported by multiprocessing (top-level), multiprocessing.pool (top-level)
missing module named _scproxy - imported by urllib.request (conditional)
missing module named termios - imported by getpass (optional), tty (top-level), _pyrepl.pager (delayed, optional), click._termui_impl (conditional), asyncclick._termui_impl (conditional), rich_toolkit._getchar (delayed, conditional), rich_toolkit.utils.colors (delayed, optional), _pyrepl.unix_console (top-level), _pyrepl.fancy_termios (top-level), _pyrepl.unix_eventqueue (top-level)
missing module named multiprocessing.BufferTooShort - imported by multiprocessing (top-level), multiprocessing.connection (top-level)
missing module named multiprocessing.AuthenticationError - imported by multiprocessing (top-level), multiprocessing.connection (top-level)
missing module named multiprocessing.Process - imported by multiprocessing (top-level), gevent.tests.test__issue600 (top-level)
missing module named multiprocessing.cpu_count - imported by multiprocessing (top-level), gevent.testing.testrunner (top-level)
missing module named multiprocessing.Pipe - imported by multiprocessing (top-level), uvicorn.supervisors.multiprocess (top-level)
missing module named usercustomize - imported by site (delayed, optional)
missing module named sitecustomize - imported by site (delayed, optional)
missing module named _curses - imported by curses (top-level), curses.has_key (top-level), _pyrepl.curses (optional)
missing module named readline - imported by cmd (delayed, conditional, optional), code (delayed, conditional, optional), rlcompleter (optional), pdb (delayed, optional), websockets.cli (delayed, optional), site (delayed, optional), sqlite3.__main__ (delayed, conditional, optional)
missing module named trove_classifiers - imported by setuptools.config._validate_pyproject.formats (optional)
missing module named importlib_resources - imported by setuptools._vendor.jaraco.text (optional)
missing module named 'collections.abc' - imported by tracemalloc (top-level), traceback (top-level), typing (top-level), inspect (top-level), logging (top-level), importlib.resources.readers (top-level), selectors (top-level), asyncio.base_events (top-level), http.client (top-level), asyncio.coroutines (top-level), pydantic_core._pydantic_core (top-level), typing_extensions (top-level), pydantic_core.core_schema (top-level), typing_inspection.introspection (top-level), typing_inspection.typing_objects (top-level), pydantic._internal._typing_extra (top-level), pydantic._internal._namespace_utils (top-level), pydantic._internal._utils (top-level), pydantic.fields (top-level), pydantic.types (top-level), pydantic._internal._fields (top-level), pydantic._internal._generics (top-level), pydantic._internal._core_utils (top-level), configparser (top-level), markdown_it.main (top-level), markdown_it.ruler (top-level), markdown_it.utils (top-level), markdown_it.token (top-level), markdown_it.common.normalize_url (top-level), mdurl._decode (top-level), mdurl._encode (top-level), markdown_it._punycode (top-level), markdown_it.parser_block (top-level), markdown_it.parser_core (top-level), markdown_it.parser_inline (top-level), markdown_it.renderer (top-level), rich.scope (top-level), pydantic._internal._generate_schema (top-level), pydantic.json_schema (top-level), pydantic._internal._decorators (top-level), pydantic._internal._mock_val_ser (top-level), pydantic.plugin._schema_validator (top-level), pydantic.plugin._loader (top-level), pydantic.main (top-level), pydantic.type_adapter (top-level), anyio._core._eventloop (top-level), anyio.abc._eventloop (top-level), anyio._core._exceptions (top-level), anyio._core._tasks (top-level), anyio.abc._tasks (top-level), anyio._core._testing (top-level), anyio.from_thread (top-level), anyio.abc._sockets (top-level), anyio._core._typedattr (top-level), anyio.abc._streams (top-level), anyio._core._sockets (top-level), anyio.to_thread (top-level), anyio.streams.stapled (top-level), anyio.streams.tls (top-level), anyio.abc._testing (top-level), anyio._core._fileio (top-level), anyio._core._signals (top-level), anyio._core._subprocesses (top-level), anyio._core._tempfile (top-level), httpx._models (top-level), click.core (top-level), click.types (top-level), click._compat (top-level), click._winconsole (top-level), click.exceptions (top-level), click.utils (top-level), click.shell_completion (top-level), click.formatting (top-level), click.parser (top-level), click._textwrap (top-level), click.termui (top-level), click._termui_impl (top-level), dns.immutable (top-level), pydantic._internal._discriminated_union (top-level), pydantic._internal._known_annotated_metadata (top-level), pydantic._internal._validators (top-level), pydantic._internal._serializers (top-level), pydantic.v1.typing (top-level), pydantic.v1.fields (top-level), pydantic.v1.validators (top-level), pydantic._internal._validate_call (top-level), starlette.exceptions (top-level), starlette.datastructures (top-level), starlette.concurrency (top-level), starlette.types (top-level), starlette.requests (top-level), starlette._utils (top-level), starlette.formparsers (top-level), starlette.applications (top-level), starlette.middleware (top-level), starlette.middleware.base (top-level), starlette.responses (top-level), starlette.background (top-level), starlette.middleware.exceptions (top-level), starlette.websockets (top-level), starlette.routing (top-level), tortoise (top-level), pypika_tortoise.terms (top-level), pypika_tortoise.queries (top-level), tortoise.backends.base.client (top-level), tortoise.backends.base.executor (top-level), tortoise.expressions (top-level), tortoise.fields.base (top-level), tortoise.models (top-level), tortoise.fields.data (top-level), pytz.lazy (optional), tortoise.fields.relational (top-level), tortoise.queryset (top-level), tortoise.filters (top-level), tortoise.query_utils (top-level), tortoise.router (top-level), tortoise.backends.base.config_generator (top-level), tortoise.utils (top-level), tortoise.backends.base.schema_generator (top-level), tortoise.signals (top-level), tortoise.transactions (top-level), yaml.constructor (top-level), jwt.api_jws (top-level), jwt.api_jwt (top-level), tortoise.contrib.fastapi (top-level), starlette.templating (top-level), markupsafe (top-level), uvicorn.config (top-level), uvicorn._types (top-level), uvicorn.middleware.wsgi (top-level), uvicorn.server (top-level), uvicorn.protocols.websockets.websockets_impl (top-level), websockets.imports (top-level), websockets.asyncio.client (top-level), websockets.client (top-level), websockets.datastructures (top-level), websockets.frames (top-level), websockets.extensions.base (top-level), websockets.http11 (top-level), websockets.headers (top-level), websockets.protocol (top-level), websockets.streams (top-level), websockets.extensions.permessage_deflate (top-level), websockets.asyncio.connection (top-level), websockets.asyncio.messages (top-level), websockets.asyncio.server (top-level), websockets.server (top-level), websockets.legacy.server (top-level), websockets.legacy.protocol (top-level), websockets.legacy.framing (top-level), uvicorn.supervisors.basereload (top-level), uvicorn.supervisors.statreload (top-level), aerich (top-level), tortoise.backends.base_postgres.client (top-level), tortoise.backends.base_postgres.executor (top-level), tortoise.contrib.postgres.json_functions (top-level), tortoise.backends.base_postgres.schema_generator (top-level), tortoise.converters (top-level), asyncpg.connection (top-level), asyncpg.compat (conditional), asyncpg.protocol.protocol (top-level), psycopg._compat (conditional), psycopg._server_cursor_async (top-level), psycopg._server_cursor (top-level), aerich.migrate (top-level), asyncclick.core (top-level), asyncclick.types (top-level), asyncclick._compat (top-level), asyncclick._winconsole (top-level), asyncclick.exceptions (top-level), asyncclick.utils (top-level), asyncclick.shell_completion (top-level), asyncclick.formatting (top-level), asyncclick.parser (top-level), asyncclick._textwrap (top-level), asyncclick.termui (top-level), asyncclick._termui_impl (top-level), dictdiffer (top-level), tomllib._parser (top-level), setuptools (top-level), setuptools._distutils.filelist (top-level), setuptools._distutils.util (top-level), setuptools._vendor.jaraco.functools (top-level), setuptools._vendor.more_itertools.more (top-level), setuptools._vendor.more_itertools.recipes (top-level), setuptools._distutils._modified (top-level), setuptools._distutils.compat (top-level), setuptools._distutils.spawn (top-level), setuptools._distutils.compilers.C.base (top-level), setuptools._distutils.fancy_getopt (top-level), setuptools._reqs (top-level), setuptools.discovery (top-level), setuptools.dist (top-level), setuptools._distutils.command.bdist (top-level), setuptools._distutils.core (top-level), setuptools._distutils.cmd (top-level), setuptools._distutils.dist (top-level), setuptools._distutils.extension (top-level), setuptools.config.setupcfg (top-level), setuptools.config.expand (top-level), setuptools.config.pyprojecttoml (top-level), setuptools.config._apply_pyprojecttoml (top-level), setuptools.command.egg_info (top-level), setuptools._distutils.command.build (top-level), setuptools._distutils.command.sdist (top-level), setuptools.glob (top-level), setuptools.command._requirestxt (top-level), setuptools.command.bdist_wheel (top-level), setuptools._vendor.wheel.cli.convert (top-level), setuptools._vendor.wheel.cli.tags (top-level), setuptools._vendor.tomli._parser (top-level), aerich.utils (top-level), sqlite3.dbapi2 (top-level), tortoise.backends.sqlite.client (top-level), aiosqlite.core (top-level), aiosqlite.context (top-level), aiosqlite.cursor (top-level), sentry_sdk._types (conditional), sentry_sdk.serializer (top-level), pkg_resources (top-level), setuptools._vendor.platformdirs.windows (conditional), sentry_sdk.tracing_utils (top-level), sentry_sdk.tracing (conditional), sentry_sdk.scope (conditional), sentry_sdk.client (top-level), sentry_sdk.integrations (conditional), sentry_sdk.crons.decorator (conditional), sentry_sdk.api (conditional), starlette.middleware.cors (top-level), starlette.middleware.trustedhost (top-level), starlette.middleware.wsgi (top-level), starlette.testclient (top-level), tortoise.backends.asyncpg.client (top-level), anyio._backends._asyncio (top-level), anyio._core._asyncio_selector_thread (top-level), anyio._backends._trio (top-level), pydantic.deprecated.decorator (top-level), pydantic.experimental.arguments_schema (top-level), pydantic.experimental.pipeline (top-level), pydantic.mypy (top-level), sentry_sdk.integrations.logging (conditional), sentry_sdk.integrations.aiohttp (conditional), sentry_sdk.integrations.bottle (conditional), sentry_sdk.integrations.celery (top-level), sentry_sdk.integrations.celery.beat (conditional), sentry_sdk.integrations.django.signals_handlers (conditional), sentry_sdk.integrations.redis._sync_common (conditional), sentry_sdk.integrations.redis._async_common (conditional), sentry_sdk.integrations.starlette (top-level), starlette.authentication (top-level), sentry_sdk.integrations.graphene (conditional), sentry_sdk.integrations.httpx (conditional), sentry_sdk.integrations.litestar (top-level), sentry_sdk.integrations.sanic (conditional), websockets.legacy.auth (top-level), websockets.legacy.client (top-level), websockets.sync.client (top-level), websockets.sync.connection (top-level), websockets.sync.server (top-level), gevent.contextvars (optional), setuptools._distutils.command.build_ext (top-level), _pyrepl.types (top-level), _pyrepl.readline (top-level), setuptools._distutils.compilers.C.msvc (top-level), test.support.os_helper (top-level), gevent.tests.test__local (optional)
excluded module named _frozen_importlib - imported by importlib (optional), importlib.abc (optional), zipimport (top-level)
missing module named 'IPython.core' - imported by rich.pretty (delayed, optional), dotenv.ipython (top-level)
missing module named pygments.lexers.PrologLexer - imported by pygments.lexers (top-level), pygments.lexers.cplint (top-level)
missing module named _winreg - imported by pygments.formatters.img (optional)
missing module named PIL - imported by pygments.formatters.img (optional)
missing module named ctags - imported by pygments.formatters.html (optional)
missing module named chardet - imported by pygments.lexer (delayed, conditional, optional)
missing module named IPython - imported by rich.jupyter (delayed, optional)
missing module named attr - imported by rich.pretty (optional)
missing module named ipywidgets - imported by rich.live (delayed, conditional, optional)
missing module named 'IPython.display' - imported by rich.live (delayed, conditional, optional)
missing module named linkify_it - imported by markdown_it.main (optional)
missing module named pydantic.PydanticUserError - imported by pydantic (top-level), pydantic.root_model (top-level)
missing module named trio - imported by dns._trio_backend (top-level), httpcore._synchronization (optional), httpcore._backends.trio (top-level), httpx._transports.asgi (delayed, conditional), dns.quic (conditional), dns.quic._trio (top-level), watchfiles.main (conditional)
missing module named 'trio.testing' - imported by anyio._backends._trio (delayed)
missing module named exceptiongroup - imported by anyio._core._exceptions (conditional), anyio._core._sockets (conditional), starlette._utils (conditional, optional), anyio._backends._asyncio (conditional), anyio._backends._trio (conditional)
missing module named 'trio.to_thread' - imported by anyio._backends._trio (top-level)
missing module named 'trio.socket' - imported by dns._trio_backend (top-level), anyio._backends._trio (top-level)
missing module named outcome - imported by anyio._backends._trio (top-level)
missing module named 'trio.lowlevel' - imported by anyio._backends._trio (top-level)
missing module named 'trio.from_thread' - imported by anyio._backends._trio (top-level)
missing module named _pytest - imported by anyio._backends._asyncio (delayed)
missing module named uvloop - imported by asyncpg._testbase (delayed, conditional), anyio._backends._asyncio (delayed, conditional), uvicorn.loops.auto (delayed, optional), uvicorn.loops.uvloop (top-level)
missing module named asyncio.DefaultEventLoopPolicy - imported by asyncio (delayed, conditional), asyncio.events (delayed, conditional)
missing module named curio - imported by sniffio._impl (delayed, conditional)
missing module named socksio - imported by httpcore._sync.socks_proxy (top-level), httpcore._async.socks_proxy (top-level), httpx._transports.default (delayed, conditional, optional)
missing module named 'h2.settings' - imported by httpcore._sync.http2 (top-level), httpcore._async.http2 (top-level)
missing module named 'h2.exceptions' - imported by httpcore._sync.http2 (top-level), httpcore._async.http2 (top-level)
missing module named 'h2.events' - imported by httpcore._sync.http2 (top-level), httpcore._async.http2 (top-level), urllib3.http2.connection (top-level)
missing module named 'h2.connection' - imported by httpcore._sync.http2 (top-level), httpcore._async.http2 (top-level), urllib3.http2.connection (top-level)
missing module named h2 - imported by httpcore._sync.http2 (top-level), httpx._client (delayed, conditional, optional), sentry_sdk.transport (optional)
missing module named 'h2.config' - imported by httpcore._async.http2 (top-level), urllib3.http2.connection (top-level)
missing module named '_typeshed.wsgi' - imported by httpx._transports.wsgi (conditional)
missing module named zstandard - imported by httpx._decoders (optional), urllib3.util.request (optional), urllib3.response (optional)
missing module named brotlicffi - imported by httpx._decoders (optional), urllib3.util.request (optional), urllib3.response (optional)
missing module named brotli - imported by httpx._decoders (optional), sentry_sdk.transport (optional), urllib3.util.request (optional), urllib3.response (optional)
missing module named 'aioquic.quic' - imported by dns.quic._asyncio (top-level), dns.quic._common (top-level), dns.quic._sync (top-level), dns.quic._trio (top-level)
missing module named 'aioquic.h3' - imported by dns.quic._common (top-level)
missing module named aioquic - imported by dns.quic (conditional)
missing module named eval_type_backport - imported by pydantic._internal._typing_extra (delayed, optional)
missing module named cython - imported by pydantic.v1.version (optional)
missing module named pydantic.PydanticSchemaGenerationError - imported by pydantic (delayed), pydantic.functional_validators (delayed, conditional), fastapi._compat (conditional)
missing module named pydantic.BaseModel - imported by pydantic (conditional), pydantic._internal._typing_extra (conditional), pydantic._internal._import_utils (delayed, conditional), pydantic._internal._core_utils (delayed), pydantic.deprecated.copy_internals (delayed, conditional), fastapi.exceptions (top-level), fastapi.types (top-level), fastapi._compat (top-level), fastapi.openapi.models (top-level), fastapi.security.http (top-level), fastapi.utils (top-level), fastapi.dependencies.utils (top-level), fastapi.encoders (top-level), fastapi.routing (top-level), fastapi.openapi.utils (top-level), tortoise.fields.data (delayed, optional), user (top-level), aerich.inspectdb (top-level), fastapi_cloud_cli.commands.deploy (top-level), fastapi_cloud_cli.config (top-level), fastapi_cloud_cli.utils.auth (top-level), fastapi_cloud_cli.utils.apps (top-level), fastapi_cloud_cli.commands.env (top-level), fastapi_cloud_cli.commands.login (top-level), sentry_sdk.integrations.starlite (optional)
missing module named toml - imported by pydantic.v1.mypy (delayed, conditional, optional)
missing module named 'mypy.version' - imported by pydantic.mypy (top-level), pydantic.v1.mypy (top-level)
missing module named 'mypy.util' - imported by pydantic.mypy (top-level), pydantic.v1.mypy (top-level)
missing module named 'mypy.typevars' - imported by pydantic.mypy (top-level), pydantic.v1.mypy (top-level)
missing module named 'mypy.types' - imported by pydantic.mypy (top-level), pydantic.v1.mypy (top-level)
missing module named 'mypy.server' - imported by pydantic.mypy (top-level), pydantic.v1.mypy (top-level)
missing module named 'mypy.semanal' - imported by pydantic.mypy (top-level), pydantic.v1.mypy (top-level)
missing module named 'mypy.plugins' - imported by pydantic.mypy (top-level), pydantic.v1.mypy (top-level)
missing module named 'mypy.plugin' - imported by pydantic.mypy (top-level), pydantic.v1.mypy (top-level)
missing module named 'mypy.options' - imported by pydantic.mypy (top-level), pydantic.v1.mypy (top-level)
missing module named 'mypy.nodes' - imported by pydantic.mypy (top-level), pydantic.v1.mypy (top-level)
missing module named 'mypy.errorcodes' - imported by pydantic.v1.mypy (top-level)
missing module named hypothesis - imported by pydantic.v1._hypothesis_plugin (top-level)
missing module named 'mypy.typeops' - imported by pydantic.mypy (top-level)
missing module named 'mypy.type_visitor' - imported by pydantic.mypy (top-level)
missing module named 'mypy.state' - imported by pydantic.mypy (top-level)
missing module named 'mypy.expandtype' - imported by pydantic.mypy (top-level)
missing module named mypy - imported by pydantic.mypy (top-level)
missing module named ciso8601 - imported by tortoise.fields.data (optional)
missing module named sets - imported by pytz.tzinfo (optional)
missing module named collections.Mapping - imported by collections (optional), pytz.lazy (optional), gevent.contextvars (optional), gevent.tests.test__local (optional)
missing module named UserDict - imported by pytz.lazy (optional)
missing module named 'backports.zoneinfo' - imported by psycopg._compat (conditional)
missing module named psycopg_c - imported by psycopg._cmodule (conditional), psycopg.pq (delayed, conditional, optional)
missing module named numpy - imported by psycopg.types.numeric (delayed, conditional), dictdiffer (optional)
missing module named aiocontextvars - imported by sentry_sdk.utils (delayed, conditional, optional)
missing module named eventlet - imported by sentry_sdk.utils (delayed, optional)
missing module named zope.schema - imported by zope (optional), gevent._interfaces (optional)
missing module named imp - imported by gevent._compat (optional), cffi.verifier (conditional), cffi._imp_emulation (optional)
missing module named _continuation - imported by gevent.greenlet (conditional)
missing module named thread - imported by cffi.lock (conditional, optional), cffi.cparser (conditional, optional), gevent.tests.lock_tests (optional), gevent.tests.test__core_async (optional), gevent.tests.test__refcount (optional), gevent.tests.test__thread (optional)
missing module named httplib - imported by gevent.tests.test__socket_ssl (optional)
missing module named selectors2 - imported by gevent.selectors (optional), gevent.tests.test__monkey_selectors (optional)
missing module named _import_wait - imported by gevent.tests.test__import_wait (optional)
missing module named _blocks_at_top_level - imported by gevent.tests.test__import_blocking_in_greenlet (delayed, optional)
missing module named SimpleHTTPServer - imported by gevent.tests.test__greenness (optional)
missing module named BaseHTTPServer - imported by gevent.tests.test__greenness (optional)
missing module named urllib2 - imported by gevent.tests.test__example_wsgiserver (optional), gevent.tests.test__greenness (optional)
missing module named getaddrinfo_module - imported by gevent.tests.test__getaddrinfo_import (optional)
missing module named __builtin__ - imported by gevent.backdoor (delayed, optional), gevent.libev.corecffi (conditional), gevent.testing.six (conditional)
missing module named test.libregrtest.ALL_RESOURCES - imported by test.libregrtest (delayed, optional), gevent.testing.resources (delayed, optional)
missing module named objgraph - imported by gevent.testing.leakcheck (optional)
missing module named mock - imported by gevent.testing (optional)
missing module named mimetools - imported by gevent.pywsgi (optional)
missing module named _setuputils - imported by gevent.libev._corecffi_build (optional), gevent.libuv._corecffi_build (optional)
missing module named 'setuptools._distutils.msvc9compiler' - imported by cffi._shimmed_dist_utils (conditional, optional)
missing module named collections.Callable - imported by collections (optional), cffi.api (optional)
missing module named _dummy_thread - imported by cffi.lock (conditional, optional)
missing module named dummy_thread - imported by cffi.lock (conditional, optional)
missing module named cStringIO - imported by cffi.ffiplatform (optional)
missing module named cPickle - imported by pycparser.ply.yacc (delayed, optional)
missing module named cffi._pycparser - imported by cffi (optional), cffi.cparser (optional)
missing module named gevent.libev._corecffi - imported by gevent.libev (top-level), gevent.libev.corecffi (top-level), gevent.libev.watcher (top-level)
missing module named _setuplibev - imported by gevent.libev._corecffi_build (optional)
missing module named uwsgi - imported by sentry_sdk._compat (delayed, optional)
missing module named 'tornado.gen' - imported by sentry_sdk.integrations.tornado (optional)
missing module named 'tornado.web' - imported by sentry_sdk.integrations.tornado (optional)
missing module named tornado - imported by sentry_sdk.integrations.tornado (optional)
missing module named 'django.http' - imported by sentry_sdk.spotlight (optional), sentry_sdk.integrations._wsgi_common (optional), sentry_sdk.integrations.django.asgi (conditional), sentry_sdk.integrations.django (conditional)
missing module named 'strawberry.types' - imported by sentry_sdk.integrations.strawberry (conditional)
missing module named graphql - imported by sentry_sdk.integrations.ariadne (conditional), sentry_sdk.integrations.gql (optional), sentry_sdk.integrations.strawberry (conditional)
missing module named 'strawberry.http' - imported by sentry_sdk.integrations.strawberry (conditional, optional)
missing module named 'strawberry.extensions' - imported by sentry_sdk.integrations.strawberry (optional)
missing module named strawberry - imported by sentry_sdk.integrations.strawberry (optional)
missing module named 'starlite.types' - imported by sentry_sdk.integrations.starlite (conditional)
missing module named 'starlite.utils' - imported by sentry_sdk.integrations.starlite (optional)
missing module named 'starlite.routes' - imported by sentry_sdk.integrations.starlite (optional)
missing module named 'starlite.plugins' - imported by sentry_sdk.integrations.starlite (optional)
missing module named 'starlite.middleware' - imported by sentry_sdk.integrations.starlite (optional)
missing module named 'starlite.handlers' - imported by sentry_sdk.integrations.starlite (optional)
missing module named starlite - imported by sentry_sdk.integrations.starlite (conditional, optional)
missing module named 'sqlalchemy.event' - imported by sentry_sdk.integrations.sqlalchemy (optional)
missing module named sqlalchemy - imported by sentry_sdk.integrations.sqlalchemy (optional)
missing module named 'sanic.handlers' - imported by sentry_sdk.integrations.sanic (optional)
missing module named 'sanic.exceptions' - imported by sentry_sdk.integrations.sanic (optional)
missing module named 'sanic.router' - imported by sentry_sdk.integrations.sanic (conditional, optional)
missing module named 'sanic.response' - imported by sentry_sdk.integrations.sanic (conditional)
missing module named sanic - imported by sentry_sdk.integrations.sanic (conditional, optional)
missing module named 'rq.job' - imported by sentry_sdk.integrations.rq (conditional, optional)
missing module named 'rq.worker' - imported by sentry_sdk.integrations.rq (optional)
missing module named 'rq.version' - imported by sentry_sdk.integrations.rq (optional)
missing module named 'rq.timeouts' - imported by sentry_sdk.integrations.rq (optional)
missing module named rq - imported by sentry_sdk.integrations.rq (optional)
missing module named redis - imported by sentry_sdk.integrations.redis.modules.queries (conditional), sentry_sdk.integrations.redis.redis_cluster (delayed, conditional, optional), sentry_sdk.integrations.redis (delayed, optional)
missing module named rediscluster - imported by sentry_sdk.integrations.redis.redis_py_cluster_legacy (delayed, optional)
missing module named 'redis.asyncio' - imported by sentry_sdk.integrations.redis.redis (delayed, optional), sentry_sdk.integrations.redis._async_common (conditional), sentry_sdk.integrations.redis.redis_cluster (delayed, conditional, optional)
missing module named rb - imported by sentry_sdk.integrations.redis.rb (delayed, optional)
missing module named 'flask.sansio' - imported by sentry_sdk.integrations.quart (optional)
missing module named 'quart.scaffold' - imported by sentry_sdk.integrations.quart (optional)
missing module named 'quart.signals' - imported by sentry_sdk.integrations.quart (optional)
missing module named quart - imported by sentry_sdk.integrations.flask (delayed, optional), sentry_sdk.integrations.quart (optional)
missing module named quart_auth - imported by sentry_sdk.integrations.quart (optional)
missing module named 'pyramid.security' - imported by sentry_sdk.integrations.pyramid (conditional)
missing module named 'webob.request' - imported by sentry_sdk.integrations.pyramid (conditional)
missing module named webob - imported by sentry_sdk.integrations.pyramid (conditional)
missing module named 'pyramid.response' - imported by sentry_sdk.integrations.pyramid (conditional)
missing module named 'pyramid.request' - imported by sentry_sdk.integrations.pyramid (optional)
missing module named pyramid - imported by sentry_sdk.integrations.pyramid (delayed, optional)
missing module named 'pymongo.monitoring' - imported by sentry_sdk.integrations.pymongo (conditional)
missing module named pymongo - imported by sentry_sdk.integrations.pymongo (optional)
missing module named tiktoken - imported by sentry_sdk.integrations.langchain (delayed, conditional), sentry_sdk.integrations.openai (delayed, conditional)
missing module named 'openai.types' - imported by sentry_sdk.integrations.openai (conditional, optional)
missing module named 'openai.resources' - imported by sentry_sdk.integrations.openai (optional)
missing module named openai - imported by sentry_sdk.integrations.openai (optional)
missing module named 'loguru._defaults' - imported by sentry_sdk.integrations.loguru (optional)
missing module named loguru - imported by sentry_sdk.integrations.loguru (conditional, optional)
missing module named 'litestar.types' - imported by sentry_sdk.integrations.litestar (conditional)
missing module named 'litestar.exceptions' - imported by sentry_sdk.integrations.litestar (optional)
missing module named 'litestar.data_extractors' - imported by sentry_sdk.integrations.litestar (optional)
missing module named 'litestar.routes' - imported by sentry_sdk.integrations.litestar (optional)
missing module named 'litestar.middleware' - imported by sentry_sdk.integrations.litestar (conditional, optional)
missing module named 'litestar.handlers' - imported by sentry_sdk.integrations.litestar (optional)
missing module named litestar - imported by sentry_sdk.integrations.litestar (optional)
missing module named 'langchain_core.agents' - imported by sentry_sdk.integrations.langchain (optional)
missing module named 'langchain_core.callbacks' - imported by sentry_sdk.integrations.langchain (optional)
missing module named 'langchain_core.outputs' - imported by sentry_sdk.integrations.langchain (optional)
missing module named langchain_core - imported by sentry_sdk.integrations.langchain (optional)
missing module named huggingface_hub - imported by sentry_sdk.integrations.huggingface_hub (optional)
missing module named 'huey.exceptions' - imported by sentry_sdk.integrations.huey (optional)
missing module named huey - imported by sentry_sdk.integrations.huey (optional)
missing module named 'graphql.type' - imported by sentry_sdk.integrations.graphene (conditional)
missing module named 'graphql.execution' - imported by sentry_sdk.integrations.graphene (conditional)
missing module named 'graphene.language' - imported by sentry_sdk.integrations.graphene (conditional)
missing module named graphene - imported by sentry_sdk.integrations.graphene (optional)
missing module named 'gql.transport' - imported by sentry_sdk.integrations.gql (optional)
missing module named gql - imported by sentry_sdk.integrations.gql (optional)
missing module named blinker - imported by sentry_sdk.integrations.flask (optional)
missing module named 'flask.signals' - imported by sentry_sdk.integrations.flask (optional)
missing module named flask - imported by sentry_sdk.integrations.flask (optional)
missing module named flask_login - imported by sentry_sdk.integrations.flask (optional)
missing module named 'werkzeug.datastructures' - imported by sentry_sdk.integrations.flask (conditional)
missing module named 'falcon.request' - imported by sentry_sdk.integrations.falcon (conditional)
missing module named 'falcon.api_helpers' - imported by sentry_sdk.integrations.falcon (optional)
missing module named 'falcon.app_helpers' - imported by sentry_sdk.integrations.falcon (optional)
missing module named falcon - imported by sentry_sdk.integrations.falcon (optional)
missing module named 'django.template' - imported by sentry_sdk.integrations.django.templates (top-level), sentry_sdk.integrations.django.views (delayed), sentry_sdk.integrations.django (delayed, optional)
missing module named channels - imported by sentry_sdk.integrations.threading (delayed, optional), sentry_sdk.integrations.django.asgi (delayed)
missing module named 'channels.http' - imported by sentry_sdk.integrations.django (delayed, optional)
missing module named rest_framework - imported by sentry_sdk.integrations.django (delayed, optional)
missing module named 'django.db' - imported by sentry_sdk.integrations.django (delayed, optional)
missing module named 'django.utils' - imported by sentry_sdk.integrations.django.templates (top-level), sentry_sdk.integrations.django (conditional)
missing module named compression - imported by urllib3.util.request (optional), urllib3.response (optional)
missing module named 'pyodide.ffi' - imported by urllib3.contrib.emscripten.fetch (delayed, optional)
missing module named pyodide - imported by urllib3.contrib.emscripten.fetch (top-level)
missing module named js - imported by urllib3.contrib.emscripten.fetch (top-level)
missing module named 'django.dispatch' - imported by sentry_sdk.integrations.django.signals_handlers (top-level)
missing module named 'django.shortcuts' - imported by sentry_sdk.integrations.django.templates (delayed)
missing module named 'django.urls' - imported by sentry_sdk.integrations.django (optional), sentry_sdk.integrations.django.transactions (conditional, optional)
missing module named 'django.core' - imported by sentry_sdk.integrations.django (delayed, conditional, optional), sentry_sdk.integrations.django.transactions (optional), sentry_sdk.integrations.django.asgi (top-level), sentry_sdk.integrations.django.middleware (delayed), sentry_sdk.integrations.django.views (delayed), sentry_sdk.integrations.django.caching (top-level)
missing module named 'django.conf' - imported by sentry_sdk.spotlight (optional), sentry_sdk.integrations.django (delayed, optional), sentry_sdk.integrations.django.caching (delayed, conditional)
missing module named django - imported by sentry_sdk.spotlight (optional), sentry_sdk.integrations.threading (delayed, optional), sentry_sdk.integrations.django (optional), sentry_sdk.integrations.django.transactions (top-level), sentry_sdk.integrations.django.templates (top-level), sentry_sdk.integrations.django.middleware (top-level), sentry_sdk.integrations.django.caching (top-level)
missing module named 'cohere.base_client' - imported by sentry_sdk.integrations.cohere (optional)
missing module named cohere - imported by sentry_sdk.integrations.cohere (conditional, optional)
missing module named clickhouse_driver - imported by sentry_sdk.integrations.clickhouse_driver (optional)
missing module named 'chalice.app' - imported by sentry_sdk.integrations.chalice (delayed, conditional, optional)
missing module named chalice - imported by sentry_sdk.integrations.chalice (optional)
missing module named billiard - imported by sentry_sdk.integrations.celery (delayed)
missing module named kombu - imported by sentry_sdk.integrations.celery (optional)
missing module named 'celery.exceptions' - imported by sentry_sdk.integrations.celery (optional)
missing module named 'celery.app' - imported by sentry_sdk.integrations.celery (delayed, optional)
missing module named celery - imported by sentry_sdk.integrations.celery.beat (optional), sentry_sdk.integrations.celery (delayed, optional)
missing module named redbeat - imported by sentry_sdk.integrations.celery.beat (optional)
missing module named 'celery.signals' - imported by sentry_sdk.integrations.celery.beat (optional)
missing module named 'celery.schedules' - imported by sentry_sdk.integrations.celery.beat (optional)
missing module named 'celery.beat' - imported by sentry_sdk.integrations.celery.beat (optional)
missing module named bottle - imported by sentry_sdk.integrations.bottle (conditional, optional)
missing module named 'botocore.awsrequest' - imported by sentry_sdk.integrations.boto3 (optional)
missing module named 'botocore.response' - imported by sentry_sdk.integrations.boto3 (optional)
missing module named 'botocore.client' - imported by sentry_sdk.integrations.boto3 (optional)
missing module named botocore - imported by sentry_sdk.integrations.boto3 (optional)
missing module named 'arq.typing' - imported by sentry_sdk.integrations.arq (conditional)
missing module named 'arq.jobs' - imported by sentry_sdk.integrations.arq (conditional)
missing module named 'arq.cron' - imported by sentry_sdk.integrations.arq (conditional)
missing module named 'arq.worker' - imported by sentry_sdk.integrations.arq (conditional, optional)
missing module named 'arq.connections' - imported by sentry_sdk.integrations.arq (optional)
missing module named 'arq.version' - imported by sentry_sdk.integrations.arq (optional)
missing module named arq - imported by sentry_sdk.integrations.arq (optional)
missing module named ariadne - imported by sentry_sdk.integrations.ariadne (conditional)
missing module named 'anthropic.types' - imported by sentry_sdk.integrations.anthropic (conditional, optional)
missing module named anthropic - imported by sentry_sdk.integrations.anthropic (optional)
missing module named 'aiohttp.web_urldispatcher' - imported by sentry_sdk.integrations.aiohttp (conditional)
missing module named 'aiohttp.web_request' - imported by sentry_sdk.integrations.aiohttp (conditional)
missing module named 'aiohttp.web' - imported by sentry_sdk.integrations.aiohttp (optional)
missing module named aiohttp - imported by sentry_sdk.integrations.aiohttp (conditional, optional)
missing module named socks - imported by urllib3.contrib.socks (optional)
missing module named async_timeout - imported by asyncpg._asyncio_compat (conditional)
missing module named sqlite3.Warning - imported by sqlite3 (top-level), aiosqlite (top-level)
missing module named sqlite3.sqlite_version - imported by sqlite3 (top-level), aiosqlite (top-level)
missing module named sqlite3.Row - imported by sqlite3 (top-level), aiosqlite (top-level)
missing module named sqlite3.register_converter - imported by sqlite3 (top-level), aiosqlite (top-level)
missing module named sqlite3.register_adapter - imported by sqlite3 (top-level), aiosqlite (top-level)
missing module named sqlite3.ProgrammingError - imported by sqlite3 (top-level), aiosqlite (top-level)
missing module named sqlite3.OperationalError - imported by sqlite3 (top-level), aiosqlite (top-level)
missing module named sqlite3.NotSupportedError - imported by sqlite3 (top-level), aiosqlite (top-level)
missing module named sqlite3.IntegrityError - imported by sqlite3 (top-level), aiosqlite (top-level)
missing module named sqlite3.Error - imported by sqlite3 (top-level), aiosqlite (top-level)
missing module named sqlite3.DatabaseError - imported by sqlite3 (top-level), aiosqlite (top-level)
missing module named tomli_w - imported by aerich._compat (delayed, optional)
missing module named tomlkit - imported by aerich._compat (delayed, conditional, optional)
missing module named 'gunicorn.workers' - imported by uvicorn.workers (top-level)
missing module named gunicorn - imported by uvicorn.workers (top-level)
missing module named 'wsproto.utilities' - imported by uvicorn.protocols.websockets.wsproto_impl (top-level)
missing module named 'wsproto.extensions' - imported by uvicorn.protocols.websockets.wsproto_impl (top-level)
missing module named 'wsproto.connection' - imported by uvicorn.protocols.websockets.wsproto_impl (top-level)
missing module named wsproto - imported by uvicorn.protocols.websockets.wsproto_impl (top-level), uvicorn.protocols.websockets.auto (optional)
missing module named 'werkzeug.routing' - imported by websockets.asyncio.router (top-level), websockets.sync.router (top-level)
missing module named 'werkzeug.exceptions' - imported by websockets.sync.router (top-level)
missing module named 'python_socks.sync' - imported by websockets.sync.client (optional)
missing module named python_socks - imported by websockets.asyncio.client (optional), websockets.sync.client (optional)
missing module named werkzeug - imported by websockets.asyncio.router (top-level)
missing module named 'python_socks.async_' - imported by websockets.asyncio.client (optional)
missing module named a2wsgi - imported by uvicorn.middleware.wsgi (optional)
missing module named vms_lib - imported by platform (delayed, optional)
missing module named 'java.lang' - imported by platform (delayed, optional)
missing module named java - imported by platform (delayed)
missing module named 'win32com.gen_py' - imported by win32com (conditional, optional)
missing module named 'cryptography.hazmat' - imported by jwt.utils (optional), jwt.algorithms (optional)
missing module named 'cryptography.exceptions' - imported by jwt.algorithms (optional)
missing module named cryptography - imported by jwt.utils (optional)
